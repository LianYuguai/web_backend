// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// GoldenchamDataDao is the data access object for table goldencham_data.
type GoldenchamDataDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns GoldenchamDataColumns // columns contains all the column names of Table for convenient usage.
}

// GoldenchamDataColumns defines and stores column names for table goldencham_data.
type GoldenchamDataColumns struct {
	ToolChamber string //
	Tool        string //
	Cham        string //
	MatchRatio  string //
}

// goldenchamDataColumns holds the columns for table goldencham_data.
var goldenchamDataColumns = GoldenchamDataColumns{
	ToolChamber: "toolChamber",
	Tool:        "Tool",
	Cham:        "Cham",
	MatchRatio:  "MatchRatio",
}

// NewGoldenchamDataDao creates and returns a new DAO object for table data access.
func NewGoldenchamDataDao() *GoldenchamDataDao {
	return &GoldenchamDataDao{
		group:   "default",
		table:   "goldencham_data",
		columns: goldenchamDataColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *GoldenchamDataDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *GoldenchamDataDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *GoldenchamDataDao) Columns() GoldenchamDataColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *GoldenchamDataDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *GoldenchamDataDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *GoldenchamDataDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
